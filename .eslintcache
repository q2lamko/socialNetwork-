[{"C:\\REACT\\socialnetwork\\src\\App.tsx":"1","C:\\REACT\\socialnetwork\\src\\components\\Navbar\\Navbar.jsx":"2","C:\\REACT\\socialnetwork\\src\\reportWebVitals.ts":"3","C:\\REACT\\socialnetwork\\src\\index.tsx":"4","C:\\REACT\\socialnetwork\\src\\components\\Header\\Header.jsx":"5","C:\\REACT\\socialnetwork\\src\\components\\Settings\\Settings.tsx":"6","C:\\REACT\\socialnetwork\\src\\components\\Music\\Music.tsx":"7","C:\\REACT\\socialnetwork\\src\\components\\News\\News.tsx":"8","C:\\REACT\\socialnetwork\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"9","C:\\REACT\\socialnetwork\\src\\components\\Dialogs\\Dialogs.tsx":"10","C:\\REACT\\socialnetwork\\src\\components\\Dialogs\\Message\\Message.tsx":"11","C:\\REACT\\socialnetwork\\src\\components\\Redux\\state.ts":"12","C:\\REACT\\socialnetwork\\src\\components\\Content\\Profile.tsx":"13","C:\\REACT\\socialnetwork\\src\\components\\Content\\myPosts\\MyPosts.tsx":"14","C:\\REACT\\socialnetwork\\src\\components\\Content\\ProfileInfo\\ProfileInfo.tsx":"15","C:\\REACT\\socialnetwork\\src\\components\\Content\\Post\\Post.tsx":"16","C:\\REACT\\socialnetwork\\src\\components\\Redux\\profile-reducer.tsx":"17","C:\\REACT\\socialnetwork\\src\\components\\Redux\\dialogs-reducer.ts":"18","C:\\REACT\\socialnetwork\\src\\components\\Redux\\redux-store.ts":"19","C:\\REACT\\socialnetwork\\src\\components\\Content\\myPosts\\MyPostsContainer.tsx":"20","C:\\REACT\\socialnetwork\\src\\components\\Dialogs\\DialogsContainer.tsx":"21"},{"size":1656,"mtime":1623653131883,"results":"22","hashOfConfig":"23"},{"size":712,"mtime":1607090180903,"results":"24","hashOfConfig":"23"},{"size":425,"mtime":1606221931531,"results":"25","hashOfConfig":"23"},{"size":921,"mtime":1623762979886,"results":"26","hashOfConfig":"23"},{"size":348,"mtime":1606501545052,"results":"27","hashOfConfig":"23"},{"size":200,"mtime":1606967251241,"results":"28","hashOfConfig":"23"},{"size":834,"mtime":1610976722403,"results":"29","hashOfConfig":"23"},{"size":184,"mtime":1606966922465,"results":"30","hashOfConfig":"23"},{"size":458,"mtime":1617711444313,"results":"31","hashOfConfig":"23"},{"size":1758,"mtime":1623762626899,"results":"32","hashOfConfig":"23"},{"size":686,"mtime":1617722253852,"results":"33","hashOfConfig":"23"},{"size":5112,"mtime":1623240756347,"results":"34","hashOfConfig":"23"},{"size":668,"mtime":1623651887645,"results":"35","hashOfConfig":"23"},{"size":1227,"mtime":1623325086241,"results":"36","hashOfConfig":"23"},{"size":440,"mtime":1617774724730,"results":"37","hashOfConfig":"23"},{"size":491,"mtime":1617713618663,"results":"38","hashOfConfig":"23"},{"size":961,"mtime":1623233761828,"results":"39","hashOfConfig":"23"},{"size":967,"mtime":1623233761844,"results":"40","hashOfConfig":"23"},{"size":355,"mtime":1623247139518,"results":"41","hashOfConfig":"23"},{"size":1247,"mtime":1623652047843,"results":"42","hashOfConfig":"23"},{"size":1325,"mtime":1623763947613,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"tu1b4p",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\REACT\\socialnetwork\\src\\App.tsx",["99","100"],"C:\\REACT\\socialnetwork\\src\\components\\Navbar\\Navbar.jsx",[],["101","102"],"C:\\REACT\\socialnetwork\\src\\reportWebVitals.ts",[],["103","104"],"C:\\REACT\\socialnetwork\\src\\index.tsx",[],"C:\\REACT\\socialnetwork\\src\\components\\Header\\Header.jsx",["105"],"import React from 'react';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n    <header className={classes.header}>\r\n        <img className={classes.img} src='https://i.pinimg.com/736x/48/3a/6c/483a6c355deffde74c84cb5ca2636ee4--logo-software-security-logo.jpg'></img>\r\n    </header>)\r\n}\r\n\r\nexport default Header;","C:\\REACT\\socialnetwork\\src\\components\\Settings\\Settings.tsx",["106"],"import React from 'react';\r\nimport classes from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n        Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;",["107","108"],"C:\\REACT\\socialnetwork\\src\\components\\Music\\Music.tsx",["109","110"],"import React from 'react';\r\nimport classes from './Music.module.css'\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            <p>'Вам дано число, состоящее из нескольких цифр. Напишите функцию,\r\n            которая поменяет местами цифры так, чтобы получилось максимально большое число.\r\n            Примеры:<br/>\r\n            (123) =&gt; 321<br/>\r\n            (786) =&gt; 876<br/>\r\n            (\"001\") =&gt; 100<br/>\r\n            (999) =&gt; 999<br/>\r\n            (10543) =&gt; 54310'<br/></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst n = 123476;\r\nconst arr = n.toString(10).split('').map(Number);\r\narr.sort(( a, b ) =>  b - a);  \r\nconsole.log(arr);\r\n\r\nconst number = '50$'\r\n\r\n\r\n\r\nexport default Music;","C:\\REACT\\socialnetwork\\src\\components\\News\\News.tsx",["111"],"import React from 'react';\r\nimport classes from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n        News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","C:\\REACT\\socialnetwork\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],"C:\\REACT\\socialnetwork\\src\\components\\Dialogs\\Dialogs.tsx",[],"C:\\REACT\\socialnetwork\\src\\components\\Dialogs\\Message\\Message.tsx",[],"C:\\REACT\\socialnetwork\\src\\components\\Redux\\state.ts",["112","113"],"import {profileReducer} from \"./profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\n\r\nexport type StoreType = {\r\n    _state: StateType\r\n    _rerenderEntireTree: () => void\r\n    subscribe: (observer: () => void) => void\r\n    getState: () => StateType\r\n    dispatch: (action: ActionsTypes) => void\r\n    // addPost:(postMessage: string)=> void\r\n    // changeNewText:(newPost: string) => void\r\n}\r\n//\r\n// type AddPostActionType = {\r\n//     type: \"ADD-POST\",\r\n//     postMessage: string\r\n// }\r\n\r\n\r\nexport type ActionsTypes =\r\n      ReturnType<typeof addPostActionCreator>\r\n    | ReturnType<typeof newTextChangeActionCreator>\r\n    | ReturnType<typeof newMessageBodyActionCreator>\r\n    | ReturnType<typeof sendMessageBodyActionCreator>\r\n\r\nexport const addPostActionCreator = (postMessage: string) => {\r\n    return {\r\n        type: \"ADD-POST\",\r\n        postMessage: postMessage\r\n    } as const\r\n}\r\n\r\nexport const newTextChangeActionCreator = (newPost: string) => {\r\n    return {\r\n        type: \"UPDATE-NEW-POST-TEXT\",\r\n        newPost: newPost\r\n    } as const\r\n\r\n}\r\nexport const newMessageBodyActionCreator = (body: string) => {\r\n    return {\r\n        type: \"UPDATE-NEW-MESSAGE-BODY\",\r\n        body: body\r\n    } as const\r\n}\r\n\r\nexport const sendMessageBodyActionCreator = () => {\r\n    return {\r\n        type: \"SEND-MESSAGE\",\r\n\r\n    } as const\r\n}\r\n\r\n\r\n// let store: StoreType = {\r\n//     _state: {\r\n//         ProfilePage: {\r\n//             newPostText: 'it-kamaz',\r\n//             PostsData: [\r\n//                 {message: 'my first post on this page', id: 1, likesCount: 1},\r\n//                 {message: 'my second post on this page', id: 2, likesCount: 3},\r\n//                 {message: 'this is realy hardcore ', id: 3, likesCount: 3}\r\n//             ],\r\n//         },\r\n//         DialogsPage: {\r\n//             messagesData: [\r\n//                 {id: 1, message: 'Hello'},\r\n//                 {id: 2, message: 'Privet'},\r\n//                 {id: 3, message: 'Shalom'},\r\n//\r\n//             ],\r\n//             DialogsData: [\r\n//                 {id: 1, name: 'Maxim'},\r\n//                 {id: 2, name: 'Lena'},\r\n//                 {id: 3, name: 'Stas'},\r\n//                 {id: 4, name: 'Ezik'},\r\n//                 {id: 5, name: 'Stas'},\r\n//             ],\r\n//             newMessageBody: \"\",\r\n//         }\r\n//\r\n//     },\r\n//\r\n//     _rerenderEntireTree() {\r\n//         console.log(\"state changed\")\r\n//     },\r\n//     subscribe(observer) {\r\n//         this._rerenderEntireTree = observer\r\n//     },\r\n//     getState() {\r\n//         return this._state\r\n//     },\r\n//\r\n//     // addPost(postMessage: string) {\r\n//     //     const newPost: PostType = {\r\n//     //         id: new Date().getTime(),\r\n//     //         message: postMessage,\r\n//     //         likesCount: 0,\r\n//     //     };\r\n//     //\r\n//     //     this._state.ProfilePage.PostsData.push(newPost)\r\n//     //     this._rerenderEntireTree();\r\n//     // },\r\n//     // changeNewText(newPost: string) {\r\n//     //     this._state.ProfilePage.newPostText = newPost;\r\n//     //     this._rerenderEntireTree();\r\n//     // },\r\n//     dispatch(action) {\r\n//\r\n//         this._state.ProfilePage = profileReducer(this._state.ProfilePage, action)\r\n//         this._state.DialogsPage = dialogsReducer(this._state.DialogsPage, action)\r\n//         this._rerenderEntireTree()\r\n//\r\n//         // if (action.type === \"ADD-POST\") {\r\n//         //     const newPost: PostType = {\r\n//         //         id: new Date().getTime(),\r\n//         //         message: action.postMessage,\r\n//         //         likesCount: 0,\r\n//         //     };\r\n//         //\r\n//         //     this._state.ProfilePage.PostsData.push(newPost)\r\n//         //     this._rerenderEntireTree();\r\n//         // } else if (action.type === \"UPDATE-NEW-POST-TEXT\") {\r\n//         //     this._state.ProfilePage.newPostText = action.newPost;\r\n//         //     this._rerenderEntireTree();\r\n//         // } else if (action.type === \"UPDATE-NEW-MESSAGE-BODY\") {\r\n//         //     this._state.DialogsPage.newMessageBody = action.body\r\n//         //     this._rerenderEntireTree();\r\n//         // } else if (action.type === \"SEND-MESSAGE\") {\r\n//         //     let body = this._state.DialogsPage.newMessageBody;\r\n//         //     this._state.DialogsPage.newMessageBody = \"\";\r\n//         //     this._state.DialogsPage.messagesData.push({id: 6, message: body})\r\n//         //     this._rerenderEntireTree()\r\n//         // }\r\n//     }\r\n// }\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    messagesData: Array<MessageType>\r\n    DialogsData: Array<DialogDataType>\r\n    newMessageBody: string\r\n\r\n\r\n}\r\n\r\nexport type DialogDataType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type PostType = {\r\n    message: string\r\n    id: number\r\n    likesCount: number\r\n\r\n}\r\n\r\nexport type PostsDataType = Array<PostType>\r\n\r\nexport type ProfilePageType = {\r\n    PostsData: PostsDataType\r\n    newPostText: string\r\n}\r\n\r\nexport type StateType = {\r\n    ProfilePage: ProfilePageType\r\n    DialogsPage: DialogsPageType\r\n}\r\n\r\n\r\nexport default 15;","C:\\REACT\\socialnetwork\\src\\components\\Content\\Profile.tsx",["114"],"import React from 'react';\r\nimport MyPosts from './myPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport {ActionsTypes,  ProfilePageType} from \"../Redux/state\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\n\r\n\r\ntype PropsType = {\r\n    profilePage: ProfilePageType\r\n    dispatch:(action: ActionsTypes)=> void\r\n}\r\n\r\nconst Profile: React.FC<PropsType>= (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer\r\n                profilePage={props.profilePage}\r\n                dispatch={props.dispatch}\r\n            />\r\n        </div>)\r\n}\r\n\r\nexport default Profile;","C:\\REACT\\socialnetwork\\src\\components\\Content\\myPosts\\MyPosts.tsx",["115","116","117","118"],"import React, {ChangeEvent} from 'react';\r\nimport Post from '../Post/Post';\r\nimport classes from './MyPosts.module.css';\r\nimport {\r\n    ActionsTypes,\r\n    addPostActionCreator, newTextChangeActionCreator,\r\n    ProfilePageType\r\n} from \"../../Redux/state\";\r\n\r\ntype PropsType = {\r\n    profilePage: ProfilePageType\r\n    newTextChangeHandler: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n    addPost: () => void\r\n    postDataMap: JSX.Element[]\r\n\r\n}\r\n\r\n\r\nconst MyPosts: React.FC<PropsType> = (props) =>\r\n     (\r\n        <div className={classes.PostWrapper}>\r\n            <h2>post</h2>\r\n            <div>\r\n                <div>\r\n                    <textarea className={classes.textarea}\r\n                              onChange={props.newTextChangeHandler}\r\n                              value={props.profilePage.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button className={classes.addPost}\r\n                            onClick={props.addPost}>\r\n                        Добавить\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {props.postDataMap}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\nexport default MyPosts;","C:\\REACT\\socialnetwork\\src\\components\\Content\\ProfileInfo\\ProfileInfo.tsx",["119","120"],"import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\n\r\n\r\nconst ProfileInfo = () => {\r\n  return <div >\r\n    <div>\r\n      <img className={classes.img} src=\"https://i.playground.ru/p/Va7pSKtxxjf3QRTzLHMbRg.jpeg\" ></img>\r\n    </div>\r\n    <div>\r\n      <img className={classes.img} src=\"https://i.pinimg.com/236x/20/fa/9d/20fa9d7a51baab636700e9680fa4b7f7.jpg\" />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default ProfileInfo;","C:\\REACT\\socialnetwork\\src\\components\\Content\\Post\\Post.tsx",[],"C:\\REACT\\socialnetwork\\src\\components\\Redux\\profile-reducer.tsx",["121","122"],"import {ActionsTypes, PostType, ProfilePageType, StateType} from \"./state\";\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    newPostText: 'it-kamaz',\r\n    PostsData: [\r\n        {message: 'my first post on this page', id: 1, likesCount: 1},\r\n        {message: 'my second post on this page', id: 2, likesCount: 3},\r\n        {message: 'this is realy hardcore ', id: 3, likesCount: 3}\r\n    ],\r\n}\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsTypes) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-POST\":\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: action.postMessage,\r\n                likesCount: 0,\r\n            };\r\n\r\n            state.PostsData.push(newPost)\r\n            break;\r\n        case \"UPDATE-NEW-POST-TEXT\":\r\n            state.newPostText = action.newPost;\r\n            break;\r\n    }\r\n\r\n    return state\r\n}\r\n\r\n","C:\\REACT\\socialnetwork\\src\\components\\Redux\\dialogs-reducer.ts",["123","124"],"import {ActionsTypes, DialogsPageType, StateType} from \"./state\";\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    messagesData: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'Privet'},\r\n        {id: 3, message: 'Shalom'},\r\n\r\n    ],\r\n    DialogsData: [\r\n        {id: 1, name: 'Maxim'},\r\n        {id: 2, name: 'Lena'},\r\n        {id: 3, name: 'Stas'},\r\n        {id: 4, name: 'Ezik'},\r\n        {id: 5, name: 'Stas'},\r\n    ],\r\n    newMessageBody: \"\",\r\n}\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: ActionsTypes) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case \"UPDATE-NEW-MESSAGE-BODY\":\r\n            state.newMessageBody = action.body\r\n            break;\r\n        case \"SEND-MESSAGE\":\r\n            let body = state.newMessageBody;\r\n            state.newMessageBody = \"\";\r\n            state.messagesData.push({id: 6, message: body})\r\n            break;\r\n    }\r\n\r\n    return state\r\n}\r\n\r\n","C:\\REACT\\socialnetwork\\src\\components\\Redux\\redux-store.ts",[],"C:\\REACT\\socialnetwork\\src\\components\\Content\\myPosts\\MyPostsContainer.tsx",["125","126","127"],"C:\\REACT\\socialnetwork\\src\\components\\Dialogs\\DialogsContainer.tsx",["128","129","130","131","132","133"],{"ruleId":"134","severity":1,"message":"135","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":15},{"ruleId":"134","severity":1,"message":"138","line":6,"column":9,"nodeType":"136","messageId":"137","endLine":6,"endColumn":22},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":7,"column":9,"nodeType":"145","endLine":7,"endColumn":145},{"ruleId":"134","severity":1,"message":"146","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":15},{"ruleId":"139","replacedBy":"147"},{"ruleId":"141","replacedBy":"148"},{"ruleId":"134","severity":1,"message":"146","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":15},{"ruleId":"134","severity":1,"message":"149","line":24,"column":7,"nodeType":"136","messageId":"137","endLine":24,"endColumn":13},{"ruleId":"134","severity":1,"message":"146","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":15},{"ruleId":"134","severity":1,"message":"150","line":55,"column":5,"nodeType":"136","messageId":"137","endLine":55,"endColumn":21},{"ruleId":"151","severity":1,"message":"152","line":175,"column":1,"nodeType":"153","endLine":175,"endColumn":19},{"ruleId":"134","severity":1,"message":"154","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":15},{"ruleId":"134","severity":1,"message":"155","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":12},{"ruleId":"134","severity":1,"message":"156","line":5,"column":5,"nodeType":"136","messageId":"137","endLine":5,"endColumn":17},{"ruleId":"134","severity":1,"message":"157","line":6,"column":5,"nodeType":"136","messageId":"137","endLine":6,"endColumn":25},{"ruleId":"134","severity":1,"message":"158","line":6,"column":27,"nodeType":"136","messageId":"137","endLine":6,"endColumn":53},{"ruleId":"143","severity":1,"message":"144","line":10,"column":7,"nodeType":"145","endLine":10,"endColumn":97},{"ruleId":"143","severity":1,"message":"144","line":13,"column":7,"nodeType":"145","endLine":13,"endColumn":116},{"ruleId":"134","severity":1,"message":"159","line":1,"column":33,"nodeType":"136","messageId":"137","endLine":1,"endColumn":48},{"ruleId":"134","severity":1,"message":"160","line":1,"column":50,"nodeType":"136","messageId":"137","endLine":1,"endColumn":59},{"ruleId":"134","severity":1,"message":"161","line":1,"column":23,"nodeType":"136","messageId":"137","endLine":1,"endColumn":38},{"ruleId":"134","severity":1,"message":"160","line":1,"column":40,"nodeType":"136","messageId":"137","endLine":1,"endColumn":49},{"ruleId":"134","severity":1,"message":"146","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":15},{"ruleId":"134","severity":1,"message":"156","line":5,"column":5,"nodeType":"136","messageId":"137","endLine":5,"endColumn":17},{"ruleId":"134","severity":1,"message":"159","line":7,"column":5,"nodeType":"136","messageId":"137","endLine":7,"endColumn":20},{"ruleId":"134","severity":1,"message":"146","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":15},{"ruleId":"134","severity":1,"message":"162","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":18},{"ruleId":"134","severity":1,"message":"163","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":15},{"ruleId":"134","severity":1,"message":"156","line":6,"column":5,"nodeType":"136","messageId":"137","endLine":6,"endColumn":17},{"ruleId":"134","severity":1,"message":"161","line":7,"column":5,"nodeType":"136","messageId":"137","endLine":7,"endColumn":20},{"ruleId":"134","severity":1,"message":"164","line":52,"column":7,"nodeType":"136","messageId":"137","endLine":52,"endColumn":28},"@typescript-eslint/no-unused-vars","'Dialogs' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","no-native-reassign",["165"],"no-negated-in-lhs",["166"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'classes' is defined but never used.",["165"],["166"],"'number' is assigned a value but never used.","'store' is assigned a value but never used.","import/no-anonymous-default-export","Assign literal to a variable before exporting as module default","ExportDefaultDeclaration","'MyPosts' is defined but never used.","'Post' is defined but never used.","'ActionsTypes' is defined but never used.","'addPostActionCreator' is defined but never used.","'newTextChangeActionCreator' is defined but never used.","'ProfilePageType' is defined but never used.","'StateType' is defined but never used.","'DialogsPageType' is defined but never used.","'DialogItem' is defined but never used.","'Message' is defined but never used.","'SuperDialogsContainer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]